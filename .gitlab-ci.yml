default:
  tags:
    - all-ds

variables:
  PYTHON_DOCKER_IMAGE: python:3.12-slim-bookworm

workflow:
  rules:
    - if: "$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH"
    - if: "$CI_MERGE_REQUEST_IID"

stages:
  - lint
  - tests

lint:
   image: $PYTHON_DOCKER_IMAGE
   stage: lint
   interruptible: true
   before_script:
     - pip install pre-commit
     - pre-commit install
   script:
     - pre-commit run --all-files

# Job for scanning for vulnerabilities:
"trivy security scan":
  image: $PYTHON_DOCKER_IMAGE
  stage: tests
  interruptible: true
  before_script:
    - export TRIVY_VERSION=$(wget -qO - "https://api.github.com/repos/aquasecurity/trivy/releases/latest" | grep '"tag_name":' | sed -E 's/.*"v([^"]+)".*/\1/')
    - echo $TRIVY_VERSION
    - wget --no-verbose https://github.com/aquasecurity/trivy/releases/download/v${TRIVY_VERSION}/trivy_${TRIVY_VERSION}_Linux-64bit.tar.gz -O - | tar -zxvf -
  allow_failure: true
  script:
    # Build report
    - ./trivy fs --exit-code 0 --cache-dir .trivycache/ --no-progress --format template --template "@contrib/gitlab.tpl" -o gl-scanning-report.json ./
    # Build html report
    - ./trivy fs --exit-code 0 --cache-dir .trivycache/ --no-progress --format template --template "@contrib/html.tpl" -o gl-scanning-report.html ./
    # Print report
    - ./trivy fs --exit-code 0 --cache-dir .trivycache/ --no-progress ./
    # Fail on severe vulnerabilities
    - ./trivy fs --exit-code 1 --cache-dir .trivycache/ --severity CRITICAL --no-progress ./
  cache:
    paths:
      - .trivycache/
  artifacts:
    paths:
      - gl-scanning-report.html
    reports:
      dependency_scanning: gl-scanning-report.json
    expire_in: never
